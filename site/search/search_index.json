{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#arista-southwest-region-newsletter","title":"Arista Southwest Region Newsletter","text":"<p>Welcome to the April 2025 newsletter for Arista customers in the U.S. Southwest Region!</p> <p>We welcome your feedback on the newsletter. If you have any ideas on what you want to see, please reach out to southwest@arista.com.  </p>"},{"location":"#arista-avd-workflow","title":"Arista AVD Workflow","text":"<p>By: Nicholas D'ambrosio, Advanced Services Engineer, Southwest Region  </p> <p>In this month's newsletter, we are introducing a new type of article. One in which you can follow along in your environment! Nicholas has written a tutorial on using an AVD Workflow to deploy network configurations. Follow the tutorial to gain practical knowledge on our AVD tools!  </p>"},{"location":"#table-of-contents","title":"Table of Contents","text":"<ul> <li>Arista AVD Workflow</li> <li>Table of Contents</li> <li>AVD Workflow Overview</li> <li>Inventory Structure<ul> <li>Role of Variables</li> <li>Build Playbook</li> <li>How They Work Together</li> <li>Example Output</li> </ul> </li> <li>Deploy Playbook<ul> <li>Playbook Functionality</li> <li>CVaaS/CVP Authentication</li> <li>Example Output</li> </ul> </li> <li>Submit Pending Change Control via CVaaS<ul> <li>Review Studio Workspace and Pending Change Control</li> <li>Submit Change Control</li> </ul> </li> <li>References<ul> <li>Getting Started</li> <li>Arista AVD Ansible Roles</li> <li>Addititional Information </li> </ul> </li> </ul>"},{"location":"#avd-workflow-overview","title":"AVD Workflow Overview","text":"<p>This document outlines the workflow for using Arista Ansible Validated Designs (AVD) to automate and deploy network configurations to EOS devices via CloudVision as-a-Service (CVaaS).  </p> <p> </p>"},{"location":"#inventory-structure","title":"Inventory Structure","text":"<p>Below is a basic Ansible file structure breakdown:</p> <pre><code>project_root/\n\u251c\u2500\u2500 inventory.yml              # Main inventory file\n\u251c\u2500\u2500 group_vars/                # Global Ansible groups directory\n\u2502   \u251c\u2500\u2500 all.yml                # Global Ansible variables YAML file\n\u2502   \u251c\u2500\u2500 &lt;group&gt;.yml            # Group variables YAML file\n\u2502   \u2514\u2500\u2500 custom-head.html       # Custom header/footer\n\u251c\u2500\u2500 host_vars/                 # Global Ansible hosts directory\n\u2502   \u2514\u2500\u2500 &lt;device-hostname&gt;.yml  # Host-specific variables\n\u251c\u2500\u2500 build.yml                  # Playbook to render configuration\n\u2514\u2500\u2500 deploy.yml                 # Playbook to push configuration to CVaaS/CVP  \n</code></pre> <p>Here is an example of an Ansible inventory file that can be used to define your AVD topology. This YAML file defines the topology (fabric) and host relationships:  </p> <pre><code>### AVD Topology inventory.yml\nall:\n  children:\n    FABRIC:\n      children:\n        SPINES:\n          hosts:\n            spine1:\n            spine2:\n        LEAFS:\n          hosts:\n            leaf1a:\n            leaf1b:\n    NETWORK_SERVICES:\n      children:\n        LEAFS:\n        SPINES:\n    NETWORK_PORTS:\n      children:\n        LEAFS:\n        SPINES:  \n</code></pre>"},{"location":"#role-of-variables","title":"Role of Variables","text":"<p><code>group_vars/all.yml</code> - Global All 'Shared' Variables</p> <p>Global variables shared by all devices. This is where you store Arista eAPI and SSH connection parameters that Ansible can reference for all devices in the inventory file.</p> <pre><code>ansible_user: admin\nansible_ssh_pass: \"{{ vault_ansible_password }}\"\nansible_network_os: eos\nansible_connection: network_cli\nansible_become: yes\nansible_become_method: enable\nansible_become_password: admin\n</code></pre> <p><code>group_vars/FABRIC.yml:</code> - Top Level -  AVD Configuration Variables</p> <p>Variables applied to all devices under the inventory hierarchy. This could include the FABRIC, DATACENTER, or CAMPUS top layer of the architecture. These configurations define device groups, mLAG settings, uplinks, and common domain configurations.</p> <p><pre><code># CloudVision TerminAtter definitions\ncvp_instance_ips:\n  - apiserver.arista.io\nterminattr_smashexcludes: \"ale,flexCounter,hardware,kni,pulse,strata\"\nterminattr_ingestexclude: \"/Sysdb/cell/1/agent,/Sysdb/cell/2/agent\"\nterminattr_disable_aaa: true\nterminattr_cvaddr: \"apiserver.arista.io:443\"\nterminattr_cvauth: \"token-secure,/tmp/cv-onboarding-token\"\nterminattr_cvvrf: MGMT\nterminattr_taillogs: true\n\n# Spine Switches\nl3spine:\n  defaults:\n    platform: cEOSLab\n    spanning_tree_mode: mstp\n    spanning_tree_priority: 4096\n    loopback_ipv4_pool: 172.16.1.0/24\n    mlag_peer_ipv4_pool: 192.168.0.0/24\n    mlag_peer_l3_ipv4_pool: 10.1.1.0/24\n    virtual_router_mac_address: 00:1c:73:00:dc:01\n    mlag_interfaces: [Ethernet55/1, Ethernet56/1]\n  node_groups:\n    - group: SPINES\n      nodes:\n        - name: spine1\n          id: 1\n          mgmt_ip: \"192.168.101.13/24\"\n        - name: spine2\n          id: 2\n          mgmt_ip: \"192.168.101.14/24\"\n\n# IDF - Leaf Switches\nl2leaf:\n  defaults:\n    platform: cEOSLab\n    mlag_peer_ipv4_pool: 192.168.0.0/24\n    spanning_tree_mode: mstp\n    spanning_tree_priority: 16384\n    inband_mgmt_subnet: 10.10.10.0/24\n    inband_mgmt_vlan: 10\n  node_groups:\n    - group: IDF1\n      mlag: true\n      uplink_interfaces: [Ethernet51]\n      mlag_interfaces: [Ethernet53, Ethernet54]\n      filter:\n        tags: [ \"110\", \"120\" ]\n      nodes:\n        - name: leaf1a\n          id: 3\n          mgmt_ip: \"192.168.101.111/24\"\n          uplink_switches: [SPINE1]\n          uplink_switch_interfaces: [Ethernet1]\n        - name: leaf1b\n          id: 4\n          mgmt_ip: \"192.168.101.112/24\"\n          uplink_switches: [SPINE2]\n          uplink_switch_interfaces: [Ethernet1]\n</code></pre> <code>group_vars/SPINES.yml</code> &amp; <code>LEAFS.yml</code> - Device Type Variables</p> <p>These files specify the category (spine or leaf) that switch hosts belong to in the topology. The type designation aligns with parameters outlined in the FABRIC.yml variables file.</p> <pre><code>---\n### group_vars/SPINES.yml\ntype: l3spine     # Must be either spine|l3spine\n</code></pre> <pre><code>### group_vars/LEAFS.yml\ntype: l2leaf     # Must be l2leaf\n</code></pre> <p><code>group_vars/NETWORK_SERVICES.yml</code> - SVI Configuration</p> <p>Variables for applying Switched Virtual Interfaces (SVI) to the default routing instance. Each SVI creates an associated VLAN configuration that is \"tagged\" for filtering trunk links between switches.</p> <pre><code>---\n### group_vars/NETWORK_SERVICES.yml\ntenants:\n  - name: FABRIC\n    vrfs:\n      - name: default\n        svis:\n          - id: 110\n            name: 'IDF1-Data'\n            tags: [\"110\"]\n            enabled: true\n            ip_virtual_router_addresses:\n              - 10.1.10.1\n            nodes:\n              - node: SPINE1\n                ip_address: 10.1.10.2/23\n              - node: SPINE2\n                ip_address: 10.1.10.3/23\n          - id: 120\n            name: 'IDF1-Voice'\n            tags: [\"120\"]\n            enabled: true\n            ip_virtual_router_addresses:\n              - 10.1.20.1\n            nodes:\n              - node: SPINE1\n                ip_address: 10.1.20.2/23\n              - node: SPINE2\n                ip_address: 10.1.20.3/23\n          - id: 130\n            name: 'IDF1-Guest'\n            tags: [\"130\"]\n            enabled: true\n            ip_virtual_router_addresses:\n              - 10.1.30.1\n            nodes:\n              - node: SPINE1\n                ip_address: 10.1.30.2/23\n              - node: SPINE2\n                ip_address: 10.1.30.3/23\n</code></pre> <p><code>group_vars/NETWORK_PORTS.yml</code> - Port Configuration</p> <p>Variables for applying switch port-level configuration in the form of profiles, including VLAN assignment, 802.1x, POE, and other features.</p> <pre><code>---\n### group_vars/DC1_NETWORK_PORTS.yml\n\n### Port Profile\nport_profiles:\n  - profile: PP-DOT1X\n    mode: \"trunk phone\"\n    spanning_tree_portfast: edge\n    spanning_tree_bpduguard: enabled\n    poe:\n      priority: critical\n      reboot:\n        action: maintain\n      link_down:\n        action: maintain\n      shutdown:\n        action: power-off\n      limit:\n        class: 4\n    dot1x:\n      port_control: auto\n      reauthentication: true\n      pae:\n        mode: authenticator\n      host_mode:\n        mode: multi-host\n        multi_host_authenticated: true\n      mac_based_authentication:\n        enabled: true\n      timeout:\n        reauth_period: server\n        tx_period: 3\n      reauthorization_request_limit: 3\n\n# ---------------- IDF1 ----------------\n# Assign switch interfaces the port porfile above\n  - switches:\n      - LEAF1[AB] # regex match LEAF1A &amp; LEAF1B\n    switch_ports:\n      - Ethernet1-48\n    description: IDF1 Standard Port\n    profile: PP-DOT1X # Assigned port porfile\n    native_vlan: 110\n    structured_config: # Direct injection of EOS CLI-equivalent configuration into the interface, used for edge cases or features not abstracted by AVD.\n      switchport:\n        phone:\n          trunk: untagged\n          vlan: 120\n    dot1x:\n      authentication_failure:\n        action: allow\n        allow_vlan: 130\n</code></pre> <p>The global variables are now in place and ready for the next steps.</p>"},{"location":"#build-playbook","title":"Build Playbook","text":"<pre><code>---\n# build.yml\n- name: Build Configs\n  hosts: FABRIC\n  gather_facts: false\n  tasks:\n\n    - name: Generate AVD Structured Configurations and Fabric Documentation\n      ansible.builtin.import_role:\n        name: arista.avd.eos_designs\n\n    - name: Generate Device Configurations and Documentation\n      ansible.builtin.import_role:\n        name: arista.avd.eos_cli_config_gen\n</code></pre> <p><code>arista.avd.eos_designs</code></p> <p></p> <p>Purpose: Generates structured configuration data models from your inventory (inventory.yml, group_vars, and host_vars) and builds fabric-wide documentation.</p> <p>Outputs:</p> <ul> <li>YAML data structures per device under <code>structured_configs/</code></li> <li>Markdown-based documentation in <code>documentation/fabric/</code></li> </ul> <p>Include:</p> <ul> <li>Interface assignments </li> <li>BGP/EVPN settings</li> <li>VLANs/SVI definitions</li> <li>Underlay/Overlay routing logic</li> </ul> <p><code>arista.avd.eos_cli_config_gen</code></p> <p></p> <p>Purpose: Converts structured config output from eos_designs into CLI-ready EOS configurations using Jinja2 templates.</p> <p>Outputs:</p> <ul> <li>Flat text configuration files per device in <code>intended/configs/</code></li> <li>Optionally, <code>intended/structured_configs/</code> for CVP Studio</li> </ul> <p>Include:</p> <ul> <li>Complete running-config per device</li> <li>Platform-specific syntax (MLAG, port-channel, BGP, etc.)</li> <li>Ready to push to EOS or CVaaS</li> </ul>"},{"location":"#how-they-work-together","title":"How They Work Together","text":"<p>eos_designs:</p> <ul> <li>Processes inventory and variables</li> <li>Computes design logic (interface IPs, routing adjacencies, etc.)</li> <li>Exports structured YAML data</li> </ul> <p>eos_cli_config_gen:</p> <ul> <li>Reads structured YAML</li> <li>Renders Jinja2 templates to EOS CLI syntax</li> <li>Produces config files and optional configlets</li> </ul> <p>\ud83d\udca1 Key Concept:</p> <ul> <li><code>eos_designs</code> = Defines \"What should this network do?\"</li> <li><code>eos_cli_config_gen</code> = Generates \"What CLI is needed to implement it?\"</li> </ul>"},{"location":"#example-output","title":"Example Output","text":"<pre><code>(venv) root@057f4a3b7a6a:/app/examples/campus-fabric# ansible-playbook -i inventory.yml build.yml \n\nPLAY [Build Configs] **************************************************************************************************************************************************************************************\n\nTASK [arista.avd.eos_designs : Verify Requirements] *******************************************************************************************************************************************************\nAVD version 5.1.0\nUse -v for details.\nok: [SPINE1 -&gt; localhost]\n\nTASK [arista.avd.eos_designs : Create required output directories if not present] *************************************************************************************************************************\nok: [SPINE1 -&gt; localhost] =&gt; (item=/app/examples/campus-fabric/intended/structured_configs)\nok: [SPINE1 -&gt; localhost] =&gt; (item=/app/examples/campus-fabric/documentation/fabric)\n\nTASK [arista.avd.eos_designs : Set eos_designs facts] *****************************************************************************************************************************************************\nok: [SPINE1]\n\nTASK [arista.avd.eos_designs : Generate device configuration in structured format] ************************************************************************************************************************\nok: [SPINE1 -&gt; localhost]\nok: [SPINE2 -&gt; localhost]\nok: [LEAF1A -&gt; localhost]\nok: [LEAF1B -&gt; localhost]\n\nTASK [arista.avd.eos_designs : Generate fabric documentation] *********************************************************************************************************************************************\nok: [SPINE1 -&gt; localhost]\n\nTASK [arista.avd.eos_designs : Remove avd_switch_facts] ***************************************************************************************************************************************************\nok: [SPINE1]\n\nTASK [arista.avd.eos_cli_config_gen : Verify Requirements] ************************************************************************************************************************************************\nskipping: [SPINE1]\n\nTASK [arista.avd.eos_cli_config_gen : Generate eos intended configuration and device documentation] *******************************************************************************************************\nok: [SPINE1 -&gt; localhost]\nok: [SPINE2 -&gt; localhost]\nok: [LEAF1A -&gt; localhost]\nok: [LEAF1B -&gt; localhost]\n\nPLAY RECAP ************************************************************************************************************************************************************************************************\nLEAF1A                     : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   \nLEAF1B                     : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0      \nSPINE1                     : ok=7    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   \nSPINE2                     : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   \n</code></pre>"},{"location":"#deploy-playbook","title":"Deploy Playbook","text":"<p>Example deploy playbook using the cv_deploy role to connect to CVaaS:</p> <pre><code>- name: Deploy Configurations to Devices Using CloudVision Portal\n  hosts: DC1_FABRIC\n  gather_facts: false\n  connection: local\n  tasks:\n    - name: Push Configuration to CVaaS Studio\n      ansible.builtin.import_role:\n        name: arista.avd.cv_deploy\n      vars:\n        cv_server: www.cv-prod-us-central1-c.arista.io\n        cv_token: \"{{ lookup('env', 'CVP_PASSWORD') }}\"\n</code></pre>"},{"location":"#playbook-functionality","title":"Playbook Functionality","text":"<p>The deploy.yml playbook pushes rendered EOS configurations to CloudVision as-a-Service (CVaaS) using the <code>arista.avd.cv_deploy</code> role:</p> <p><code>cv_deploy</code> Role Workflow:</p> <ol> <li>Reads intended configs from intended_configs/</li> <li>Connects to CVaaS using cv_server and cv_token</li> <li>Creates/updates configlets in CloudVision Studio</li> <li>Assigns configlets to appropriate devices</li> <li>Optionally initiates config proposals for approval (Studio mode)</li> <li>Verifies assignment and returns status</li> </ol>"},{"location":"#cvaascvp-authentication","title":"CVaaS/CVP Authentication","text":"<p>Token Requirements:</p> <ol> <li>Create a CloudVision service account in Settings &gt; Users &gt; Service Accounts</li> <li>Generate an API access token</li> <li>Store token as an environment variable or in Ansible Vault</li> </ol> <pre><code>export CVP_PASSWORD=\"your_cvaas_service_account_token\"\n</code></pre> <p>The playbook references this token via:</p> <pre><code>cv_token: \"{{ lookup('env', 'CVP_PASSWORD') }}\"\n</code></pre> <p>Note: The service account requires read/write access to Config Studio, Devices, and Provisioning APIs.</p>"},{"location":"#example-output_1","title":"Example Output","text":"<pre><code>(venv) root@057f4a3b7a6a:/app/examples/campus-fabric# ansible-playbook -i inventory.yml deploy-studio.yml \n\nPLAY [Deploy Configurations to Devices Using CloudVision Portal] ********************************************************************\n\nTASK [arista.avd.cv_deploy : Verify Requirements] ***********************************************************************************\nAVD version 5.1.0\nUse -v for details.\nok: [SPINE1 -&gt; localhost]\n\nTASK [arista.avd.cv_deploy : Deploy device configurations and tags to CloudVision] **************************************************\nchanged: [SPINE1 -&gt; localhost]\n\nPLAY RECAP **************************************************************************************************************************\nSPINE1                     : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   \n\n(venv) root@057f4a3b7a6a:/app/examples/campus-fabric# \n</code></pre>"},{"location":"#submit-pending-change-control-via-cvaas","title":"Submit Pending Change Control via CVaaS","text":""},{"location":"#review-studio-workspace-and-pending-change-control","title":"Review Studio Workspace and Pending Change Control","text":"<p>After the deploy.yml playbook completes:</p> <ol> <li>A workspace is created in Studio with device-specific configurations</li> <li>A pending change control ticket is generated after validation</li> </ol> <p></p> <p></p>"},{"location":"#submit-change-control","title":"Submit Change Control","text":"<ol> <li>Click on the pending change ticket</li> <li>Review changes</li> <li>Click \"Approve and Execute\" when ready</li> </ol> <p>CVaaS will push configurations to all switches in the fabric.</p> <p></p> <p></p>"},{"location":"#references","title":"References","text":""},{"location":"#getting-started","title":"Getting Started","text":"<ul> <li>Install Arista AVD</li> <li>Getting Started Guide</li> <li>Campus Fabric Example</li> </ul>"},{"location":"#arista-avd-ansible-roles","title":"Arista AVD Ansible Roles","text":"<ul> <li>eos_design</li> <li>eos_cli_config_gen</li> <li>cv_deploy</li> </ul>"},{"location":"#addititional-information","title":"Addititional Information","text":"<ul> <li>Arista Netdevops Community</li> <li>Arista AVD</li> <li>Ansible Galaxy: arista.avd</li> <li>Arista ANTA Framework</li> <li>Arista PyAVD </li> </ul>"},{"location":"#upcoming-events","title":"Upcoming Events","text":"<p>Arista hosts various events throughout the year for you! Members of our team organize these informative events to showcase Arista's ability to not only help improve your network, but to also assist by providing a set of tools to improve your operations! Click on the boxes below to be directed to Arista's website for lists of Webinars and Events.</p> <ul> <li> <p>Webinars </p> <p>We make is easy for you to view products that are of interest, all virtually! Technical memebers of the team showcase outstading explanation of the products. Click below to see our list of Webinars. </p> <p>Arista Webinars</p> </li> <li> <p>Events </p> <p>Join us in person to get a closer look in our list of produts and solution, as well as get the chance to meet members of the team. Click below to see our list of ipcoming Events. </p> <p>Upcoming Events</p> </li> </ul>"},{"location":"#software-updates","title":"Software Updates","text":"<p>For new code releases, click here </p> Softwares Versions Release Date EOS 4.33.2.1F  4.33.3F  4.34.0F  4.30.10M  May 14th, 2025  May 2nd, 2025  April 25th, 2025  April 21st, 2025  CVP Portal 2025.1.1 Appliance 7.0.1 Sensor 1.1.0  May 7th, 2025  January 28th, 2025 March 24th, 2025  DMF 8.4.5  April 28th, 2025  WLAN CV-CUEWireless Manager 13.0.0-6718.0.0 December 15th, 2022December 2024 Arista NDR 5.2.4 August 2024 TerminAttr 1.27.2  April 9th, 2025"},{"location":"#software-advisories","title":"Software Advisories","text":"<p>Below is a list of advisories that are announced by Arista. To view more details on the specific advisories, please click the links in the middle row.</p> Name Advisory Link Date of Advisory Notice gNMI Transport Security Advisory 0117 May 6th, 2025 Time Bound Device Onboarding Security Advisory 0116 April 15th, 2025 ZTP Admin Privileges Security Advisory 0115 April 15th, 2025 Malicious Authenticated User Security Advisory 0114 April 15th, 2025 Secure Boot Field Notice 0099 April 22nd, 2025 Renaming Arista WAN Routing Models Field Notice 0098 March 26th, 2025 CloudVision On-Prem Incomplete Database Writes Field Notice 0097 March 12th, 2025 <p>For a list of the most current advisories and notices, click Here</p>"},{"location":"#product-updates","title":"Product Updates","text":"<p>End of Sale notices are listed below.</p> Device Name End Of Sale Date Software End of Software Support for EOS 4.28DMF and CCF Deployments on Accton/ Edgecore SwitchesEOS-4.34 and later no longer supported on select switchesCloudVision Portal 2023.1 Train March 14, 2025 January 31st, 2025 January 15th, 2025 December 20th, 2024  Module 7500R2 Series Linecards December 20th, 2023 Access Points AP Model W-118 November 20th, 2024  DMF DMF 8.2 May 12th, 2025 Switches DCS-7020R Series December 20th, 2024 <p>New Releases of Arista's device are listed below </p> Device More Information Release Date Arista SWAG Modern Stacking for Campus Q1 2025 Arista Multi-Domain Segmentaton Service Arista MSS Q3 2024 Arista CV UNO CloudVision Universal Network Observability Q1 2024"},{"location":"#feel-free-to-reach-out-to-us-for-your-network-needs","title":"Feel Free to Reach Out To Us For Your Network Needs","text":"<p>We thank you for taking the time to read out newsletter today. Feel free to reach out to your SE or ASE for more information or questions regardsing your network operations. Until next month, have a good one! </p>"}]}